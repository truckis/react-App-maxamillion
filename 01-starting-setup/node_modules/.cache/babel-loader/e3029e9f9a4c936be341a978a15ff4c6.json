{"ast":null,"code":"var _jsxFileName = \"/Users/truckis/Desktop/Developer/react-course-maxamillion/01-starting-setup/src/components/NewExpense/NewExpense.js\";\nimport React, { useState } from 'react';\nimport './NewExpense.css';\nimport ExpenseForm from './ExpenseForm';\nimport NewExpenseButton from './NewExpenseButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: (Math.random() * 10).toString()\n    };\n    props.onAddExpense(expenseData); //This line passes the expenseData (created in newExpense but entered by user in ExpenseForm) to App.js\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [/*#__PURE__*/_jsxDEV(NewExpenseButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), \"  \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = NewExpense;\nexport default NewExpense;\n/* onSaveExpenseData is a Prop which is used in ExpenseForm.js in the\nsubmitHandler function. expenseData from ExpenseForm is then passed into \nsaveExpenseDataHandler which pretty much takes the existing expenseData object\nand adds an id to it. \n\nThen onAddExpense is a Prop from App.js which takes the new expenseData\nand passes it to the addExpenseHandler function in App.js. */\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["/Users/truckis/Desktop/Developer/react-course-maxamillion/01-starting-setup/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpenseButton","NewExpense","props","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,sBAAsB,GAAIC,kBAAD,IAAwB;AACnD,UAAMC,WAAW,GAAG,EAChB,GAAGD,kBADa;AAEhBE,MAAAA,EAAE,EAAE,CAACC,IAAI,CAACC,MAAL,KAAc,EAAf,EAAmBC,QAAnB;AAFY,KAApB;AAIAP,IAAAA,KAAK,CAACQ,YAAN,CAAmBL,WAAnB,EALmD,CAKnB;AACnC,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,iBAAiB,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjBD;;KAAMF,U;AAmBN,eAAeA,UAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\nimport './NewExpense.css'\nimport ExpenseForm from './ExpenseForm';\nimport NewExpenseButton from './NewExpenseButton';\n\n\nconst NewExpense = (props) => {\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: (Math.random()*10).toString(),\n        }\n        props.onAddExpense(expenseData) //This line passes the expenseData (created in newExpense but entered by user in ExpenseForm) to App.js\n    }\n\n    return (\n        <div className='new-expense'>\n            <NewExpenseButton />\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>  {/* onSaveExpenseData is a custom prop that takes data from its child component ExpenseForm and \n            passes that data to saveExpenseDataHandler to create an object (expenseData) which is then passed to\n            App.js through the prop \"onAddExpense\"  */}\n        </div>\n    )\n};\n\nexport default NewExpense;\n\n/* onSaveExpenseData is a Prop which is used in ExpenseForm.js in the\nsubmitHandler function. expenseData from ExpenseForm is then passed into \nsaveExpenseDataHandler which pretty much takes the existing expenseData object\nand adds an id to it. \n\nThen onAddExpense is a Prop from App.js which takes the new expenseData\nand passes it to the addExpenseHandler function in App.js. */\n\n\n"]},"metadata":{},"sourceType":"module"}