{"ast":null,"code":"var _jsxFileName = \"/Users/truckis/Desktop/Developer/react-course-maxamillion/01-starting-setup/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_EXPENSES = [{\n  id: 'e1',\n  title: 'Toilet Paper',\n  amount: 94.12,\n  date: new Date(2020, 7, 14)\n}, {\n  id: 'e2',\n  title: 'New TV',\n  amount: 799.49,\n  date: new Date(2021, 2, 12)\n}, {\n  id: 'e3',\n  title: 'Car Insurance',\n  amount: 294.67,\n  date: new Date(2021, 2, 28)\n}, {\n  id: 'e4',\n  title: 'New Desk (Wooden)',\n  amount: 450,\n  date: new Date(2021, 5, 12)\n}];\nlet DUMMY_YEAR = [];\n\nconst App = () => {\n  _s();\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const [years, setYears] = useState(DUMMY_YEAR);\n  /* This function is invoked when a user submits the NewExpense Form */\n\n  const addExpenseHandler = expense => {\n    console.log(\"IN APP.js\");\n    console.log(expense);\n    /* This function creates a new array of expenses with the newly\n    added expense, the setExpenses pretty much is a function to update the state*/\n\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  const filterYearHandler = year => {\n    let results = expenses.filter(date => date.date.getFullYear() == year);\n    console.log(\"IN filterYearHandler\", results);\n    DUMMY_YEAR = results;\n    setYears(prevYears => {\n      return [...prevYears];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses,\n      filterYear: filterYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"4QKIa9iwfORUf9ZMGN9o0u3TYpg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/truckis/Desktop/Developer/react-course-maxamillion/01-starting-setup/src/App.js"],"names":["React","useState","Expenses","NewExpense","DUMMY_EXPENSES","id","title","amount","date","Date","DUMMY_YEAR","App","expenses","setExpenses","years","setYears","addExpenseHandler","expense","console","log","prevExpenses","filterYearHandler","year","results","filter","getFullYear","prevYears"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,MAAMC,cAAc,GAAG,CACrB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,MAAM,EAAE,KAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CADqB,EAOrB;AAAEJ,EAAAA,EAAE,EAAE,IAAN;AACCC,EAAAA,KAAK,EAAE,QADR;AAECC,EAAAA,MAAM,EAAE,MAFT;AAGCC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAHP,CAPqB,EAWrB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,MAAM,EAAE,MAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAXqB,EAiBrB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,mBAFT;AAGEC,EAAAA,MAAM,EAAE,GAHV;AAIEC,EAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;AAJR,CAjBqB,CAAvB;AAyBA,IAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACG,cAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACS,UAAD,CAAlC;AAEC;;AACA,QAAMM,iBAAiB,GAAIC,OAAD,IAAa;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA;AACJ;;AACIJ,IAAAA,WAAW,CAAEO,YAAD,IAAkB;AAC5B,aAAO,CAACH,OAAD,EAAU,GAAGG,YAAb,CAAP;AACD,KAFU,CAAX;AAGA,GARF;;AAUC,QAAMC,iBAAiB,GAAIC,IAAD,IAAU;AAClC,QAAIC,OAAO,GAAGX,QAAQ,CAACY,MAAT,CAAgBhB,IAAI,IAAIA,IAAI,CAACA,IAAL,CAAUiB,WAAV,MAA2BH,IAAnD,CAAd;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCI,OAApC;AACDb,IAAAA,UAAU,GAAGa,OAAb;AACCR,IAAAA,QAAQ,CAAEW,SAAD,IAAe;AACtB,aAAO,CAAC,GAAGA,SAAJ,CAAP;AACD,KAFO,CAAR;AAGD,GAPD;;AASD,sBACE;AAAA,4BAEE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEV;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF,oBAKE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,QAAjB;AAA2B,MAAA,UAAU,EAAES;AAAvC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAlCD;;GAAMV,G;;KAAAA,G;AAoCN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2',\n   title: 'New TV', \n   amount: 799.49, \n   date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  }\n];\n\nlet DUMMY_YEAR = []\n\nconst App = () => {\n\n const [expenses, setExpenses] = useState(DUMMY_EXPENSES)  \n const [years, setYears] = useState(DUMMY_YEAR)\n\n  /* This function is invoked when a user submits the NewExpense Form */\n  const addExpenseHandler = (expense) => {\n    console.log(\"IN APP.js\")\n    console.log(expense)\n    /* This function creates a new array of expenses with the newly\n    added expense, the setExpenses pretty much is a function to update the state*/\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses]\n    });\n   };\n\n   const filterYearHandler = (year) => {\n     let results = expenses.filter(date => date.date.getFullYear() == year)\n     console.log(\"IN filterYearHandler\", results)\n    DUMMY_YEAR = results\n     setYears((prevYears) => {\n       return [...prevYears]\n     })\n   }\n\n  return (\n    <div>\n      \n      <NewExpense onAddExpense={addExpenseHandler}/> {/* onAddExpense is a prop that will be used in the NewExpense component\n      which points to the addExpenseHandler function. It essentially takes data from NewExpense.js\n      and passes it to App.js */}\n      <Expenses items={expenses} filterYear={filterYearHandler}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}